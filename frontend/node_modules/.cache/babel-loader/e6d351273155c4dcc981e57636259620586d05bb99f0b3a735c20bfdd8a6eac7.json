{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nfunction Dropdown({\n  cookies,\n  selection,\n  Onselect\n}) {\n  _s();\n  // currently dropdown is closed\n  const [isOpen, setIsOpen] = useState(false);\n\n  // when clicked, open or close []\n  const handleClick = () => {\n    setIsOpen(!isOpen);\n  };\n\n  // when cookie selected --> 1. close dropdown; 2. select cookie\n  const handleCookieClick = cookie => {\n    setIsOpen(false);\n    onselect(cookie);\n  };\n}\n_s(Dropdown, \"wI4RD8C1tVsUvnhO13IbxY3XhiQ=\");\n_c = Dropdown;\nexport default Dropdown;\nvar _c;\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"names":["useState","Dropdown","cookies","selection","Onselect","_s","isOpen","setIsOpen","handleClick","handleCookieClick","cookie","onselect","_c","$RefreshReg$"],"sources":["/Users/johnkim/crk/src/components/Dropdown.js"],"sourcesContent":["import { useState } from 'react';\n\nfunction Dropdown({ cookies, selection, Onselect}) {\n    // currently dropdown is closed\n    const [ isOpen, setIsOpen ] = useState(false); \n\n    // when clicked, open or close []\n    const handleClick = () => {\n        setIsOpen(!isOpen);\n    }\n\n    // when cookie selected --> 1. close dropdown; 2. select cookie\n    const handleCookieClick = (cookie) => {\n        setIsOpen(false);\n        onselect(cookie);\n    }\n\n    \n\n}\n\nexport default Dropdown;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,SAASC,QAAQA,CAAC;EAAEC,OAAO;EAAEC,SAAS;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAC/C;EACA,MAAM,CAAEC,MAAM,EAAEC,SAAS,CAAE,GAAGP,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IACtBD,SAAS,CAAC,CAACD,MAAM,CAAC;EACtB,CAAC;;EAED;EACA,MAAMG,iBAAiB,GAAIC,MAAM,IAAK;IAClCH,SAAS,CAAC,KAAK,CAAC;IAChBI,QAAQ,CAACD,MAAM,CAAC;EACpB,CAAC;AAIL;AAACL,EAAA,CAjBQJ,QAAQ;AAAAW,EAAA,GAARX,QAAQ;AAmBjB,eAAeA,QAAQ;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}