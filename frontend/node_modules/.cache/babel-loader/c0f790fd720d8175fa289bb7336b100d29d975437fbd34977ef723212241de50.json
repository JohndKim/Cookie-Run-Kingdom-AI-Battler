{"ast":null,"code":"import axios from'axios';// get cookies info from database\nfunction getCookies(){axios({method:\"GET\",url:\"cookies_db/\"// '/api/cookies/?format=json'\n// \n}).then(function(response){// success\nvar cookies=response.data;console.log(response.data);console.log(cookies);return cookies;}).catch(function(error){// failure\nif(error.response){console.log(error.response);console.log(error.response.status);console.log(error.response.headers);}});}export default getCookies;","map":{"version":3,"names":["axios","getCookies","method","url","then","response","cookies","data","console","log","catch","error","status","headers"],"sources":["/Users/suesix/projects/react_projects/Cookie-Run-Kingdom-AI-Battler/frontend/src/components/battle/getCookies.js"],"sourcesContent":["import axios from 'axios';\n\n// get cookies info from database\nfunction getCookies() {\n    axios({\n        method: \"GET\",\n        url:\"cookies_db/\",\n        // '/api/cookies/?format=json'\n        // \n        }).then((response)=>{ // success\n            const cookies = response.data\n            console.log(response.data)\n            console.log(cookies)\n            return cookies;\n\n        }).catch((error) => { // failure\n        if (error.response) {\n            console.log(error.response);\n            console.log(error.response.status);\n            console.log(error.response.headers);\n            }\n        })\n}\n\nexport default getCookies;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA,QAAS,CAAAC,UAAUA,CAAA,CAAG,CAClBD,KAAK,CAAC,CACFE,MAAM,CAAE,KAAK,CACbC,GAAG,CAAC,aACJ;AACA;AACA,CAAC,CAAC,CAACC,IAAI,CAAC,SAACC,QAAQ,CAAG,CAAE;AAClB,GAAM,CAAAC,OAAO,CAAGD,QAAQ,CAACE,IAAI,CAC7BC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACE,IAAI,CAAC,CAC1BC,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC,CACpB,MAAO,CAAAA,OAAO,CAElB,CAAC,CAAC,CAACI,KAAK,CAAC,SAACC,KAAK,CAAK,CAAE;AACtB,GAAIA,KAAK,CAACN,QAAQ,CAAE,CAChBG,OAAO,CAACC,GAAG,CAACE,KAAK,CAACN,QAAQ,CAAC,CAC3BG,OAAO,CAACC,GAAG,CAACE,KAAK,CAACN,QAAQ,CAACO,MAAM,CAAC,CAClCJ,OAAO,CAACC,GAAG,CAACE,KAAK,CAACN,QAAQ,CAACQ,OAAO,CAAC,CACnC,CACJ,CAAC,CAAC,CACV,CAEA,cAAe,CAAAZ,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}