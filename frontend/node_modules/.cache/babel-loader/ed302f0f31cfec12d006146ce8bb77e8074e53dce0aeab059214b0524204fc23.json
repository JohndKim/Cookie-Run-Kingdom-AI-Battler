{"ast":null,"code":"var _jsxFileName = \"/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/battle/CookieList.js\",\n  _s = $RefreshSig$();\nimport strawberry from '../../svg/strawberry.svg';\nimport gingerbrave from '../../svg/gingerbrave.svg';\nimport muscle from '../../svg/muscle.svg';\nimport CookieImage from './CookieImage';\nimport Dropdown from './Dropdown';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CookieList() {\n  _s();\n  // use state for if cookie is selected or not\n  const [selection, setSelection] = useState(null);\n  // use state for entire cookie list object\n  // label: Name\n  // value: value given \n  // src: photo\n  // selected: selection boolean\n  const [cookies, setCookies] = useState([{\n    label: 'Strawberry Cookie',\n    value: 'strawberry',\n    src: strawberry,\n    selected: false\n  }, {\n    label: 'Gingerbrave',\n    value: 'gingerbrave',\n    src: gingerbrave,\n    selected: false\n  }, {\n    label: 'Muscle Cookie',\n    value: 'muscle',\n    src: muscle,\n    selected: false\n  }, {\n    label: 'Wizard Cookie',\n    value: 'wizard',\n    src: gingerbrave,\n    selected: false\n  }, {\n    label: 'Beet Cookie',\n    value: 'beet',\n    src: gingerbrave,\n    selected: false\n  }, {\n    label: 'Angel Cookie',\n    value: 'angel',\n    src: gingerbrave,\n    selected: false\n  }]);\n\n  // function to select cookie\n  const handleSelect = cookie => {\n    setSelection(cookie);\n  };\n  return (\n    /*#__PURE__*/\n    // <div className=\"block rounded-xl border border-gray-100 p-4 shadow-sm hover:border-gray-200 hover:ring-1 hover:ring-gray-200 focus:outline-none focus:ring\">        \n    //     <CookieImage value={selection}/>\n    //     <Dropdown cookies={cookies} value={selection} onChange={handleSelect} />\n    //     {/* <h2 className=\"mt-2 font-bold\">Add Cookie</h2> */}\n    // </div>\n    _jsxDEV(\"div\", {\n      className: \"block rounded-xl border  p-4 shadow-sm hover:border-gray-200 hover:ring-1 hover:ring-gray-200 focus:outline-none focus:ring \",\n      children: [/*#__PURE__*/_jsxDEV(CookieImage, {\n        value: selection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(Dropdown, {\n          cookies: cookies,\n          value: selection,\n          onChange: handleSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n// handleCommentEdit: function(id, text) {\n//     this.setState({\n//       data: this.state.data.map(el => (el.id === id ? Object.assign({}, el, { text }) : el))\n//     });\n// }\n\n// setCookies\n\n// cookies = [{\n//     label: 'Strawberry Cookie',\n//     value: 'strawberry',\n//     src: strawberry,\n//     selected: false,\n// }, {\n//     label: 'Gingerbrave',\n//     value: 'gingerbrave',\n//     src: gingerbrave,\n//     selected: false,\n// }, {\n//     label: 'Muscle Cookie',\n//     value: 'muscle',\n//     src: gingerbrave,\n//     selected: false,\n// },{\n//     label: 'Wizard Cookie',\n//     value: 'wizard',\n//     src: gingerbrave,\n//     selected: false,\n// },{\n//     label: 'Beet Cookie',\n//     value: 'beet',\n//     src: gingerbrave,\n//     selected: false,\n// },{\n//     label: 'Angel Cookie',\n//     value: 'angel',\n//     src: gingerbrave,\n//     selected: false,\n// }];\n\n// const listCookies = cookies.map(cookie =>\n\n// );\n_s(CookieList, \"9q1iEuYdZAY/IQeXNF2h3GTfP18=\");\n_c = CookieList;\nvar _c;\n$RefreshReg$(_c, \"CookieList\");","map":{"version":3,"names":["strawberry","gingerbrave","muscle","CookieImage","Dropdown","useState","jsxDEV","_jsxDEV","CookieList","_s","selection","setSelection","cookies","setCookies","label","value","src","selected","handleSelect","cookie","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","_c","$RefreshReg$"],"sources":["/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/battle/CookieList.js"],"sourcesContent":["import strawberry from '../../svg/strawberry.svg'\nimport gingerbrave from '../../svg/gingerbrave.svg'\nimport muscle from '../../svg/muscle.svg'\nimport CookieImage from './CookieImage'\nimport Dropdown from './Dropdown'\n\n\nimport { useState } from 'react';\n\nexport default function CookieList() {\n    // use state for if cookie is selected or not\n    const [ selection, setSelection ] = useState(null);\n    // use state for entire cookie list object\n    // label: Name\n    // value: value given \n    // src: photo\n    // selected: selection boolean\n    const [ cookies, setCookies ] = useState([{\n        label: 'Strawberry Cookie',\n        value: 'strawberry',\n        src: strawberry,\n        selected: false,\n    }, {\n        label: 'Gingerbrave',\n        value: 'gingerbrave',\n        src: gingerbrave,\n        selected: false,\n    }, {\n        label: 'Muscle Cookie',\n        value: 'muscle',\n        src: muscle,\n        selected: false,\n    },{\n        label: 'Wizard Cookie',\n        value: 'wizard',\n        src: gingerbrave,\n        selected: false,\n    },{\n        label: 'Beet Cookie',\n        value: 'beet',\n        src: gingerbrave,\n        selected: false,\n    },{\n        label: 'Angel Cookie',\n        value: 'angel',\n        src: gingerbrave,\n        selected: false,\n    }]);\n\n\n    // function to select cookie\n    const handleSelect = (cookie) => {\n        setSelection(cookie);\n    };\n    return (\n        // <div className=\"block rounded-xl border border-gray-100 p-4 shadow-sm hover:border-gray-200 hover:ring-1 hover:ring-gray-200 focus:outline-none focus:ring\">        \n        //     <CookieImage value={selection}/>\n\n        //     <Dropdown cookies={cookies} value={selection} onChange={handleSelect} />\n        //     {/* <h2 className=\"mt-2 font-bold\">Add Cookie</h2> */}\n        // </div>\n\n        <div className=\"block rounded-xl border  p-4 shadow-sm hover:border-gray-200 hover:ring-1 hover:ring-gray-200 focus:outline-none focus:ring \">        \n            <CookieImage value={selection}/>\n\n            <div className='flex justify-center'>\n            <Dropdown cookies={cookies} value={selection} onChange={handleSelect} />\n            </div>\n            {/* <h2 className=\"mt-2 font-bold\">Add Cookie</h2> */}\n        </div>\n    );\n}\n\n\n    // handleCommentEdit: function(id, text) {\n    //     this.setState({\n    //       data: this.state.data.map(el => (el.id === id ? Object.assign({}, el, { text }) : el))\n    //     });\n    // }\n\n    // setCookies\n\n    // cookies = [{\n    //     label: 'Strawberry Cookie',\n    //     value: 'strawberry',\n    //     src: strawberry,\n    //     selected: false,\n    // }, {\n    //     label: 'Gingerbrave',\n    //     value: 'gingerbrave',\n    //     src: gingerbrave,\n    //     selected: false,\n    // }, {\n    //     label: 'Muscle Cookie',\n    //     value: 'muscle',\n    //     src: gingerbrave,\n    //     selected: false,\n    // },{\n    //     label: 'Wizard Cookie',\n    //     value: 'wizard',\n    //     src: gingerbrave,\n    //     selected: false,\n    // },{\n    //     label: 'Beet Cookie',\n    //     value: 'beet',\n    //     src: gingerbrave,\n    //     selected: false,\n    // },{\n    //     label: 'Angel Cookie',\n    //     value: 'angel',\n    //     src: gingerbrave,\n    //     selected: false,\n    // }];\n\n    // const listCookies = cookies.map(cookie =>\n        \n    // );"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,0BAA0B;AACjD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,QAAQ,MAAM,YAAY;AAGjC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACjC;EACA,MAAM,CAAEC,SAAS,EAAEC,YAAY,CAAE,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAClD;EACA;EACA;EACA;EACA;EACA,MAAM,CAAEO,OAAO,EAAEC,UAAU,CAAE,GAAGR,QAAQ,CAAC,CAAC;IACtCS,KAAK,EAAE,mBAAmB;IAC1BC,KAAK,EAAE,YAAY;IACnBC,GAAG,EAAEhB,UAAU;IACfiB,QAAQ,EAAE;EACd,CAAC,EAAE;IACCH,KAAK,EAAE,aAAa;IACpBC,KAAK,EAAE,aAAa;IACpBC,GAAG,EAAEf,WAAW;IAChBgB,QAAQ,EAAE;EACd,CAAC,EAAE;IACCH,KAAK,EAAE,eAAe;IACtBC,KAAK,EAAE,QAAQ;IACfC,GAAG,EAAEd,MAAM;IACXe,QAAQ,EAAE;EACd,CAAC,EAAC;IACEH,KAAK,EAAE,eAAe;IACtBC,KAAK,EAAE,QAAQ;IACfC,GAAG,EAAEf,WAAW;IAChBgB,QAAQ,EAAE;EACd,CAAC,EAAC;IACEH,KAAK,EAAE,aAAa;IACpBC,KAAK,EAAE,MAAM;IACbC,GAAG,EAAEf,WAAW;IAChBgB,QAAQ,EAAE;EACd,CAAC,EAAC;IACEH,KAAK,EAAE,cAAc;IACrBC,KAAK,EAAE,OAAO;IACdC,GAAG,EAAEf,WAAW;IAChBgB,QAAQ,EAAE;EACd,CAAC,CAAC,CAAC;;EAGH;EACA,MAAMC,YAAY,GAAIC,MAAM,IAAK;IAC7BR,YAAY,CAACQ,MAAM,CAAC;EACxB,CAAC;EACD;IAAA;IACI;IACA;IAEA;IACA;IACA;IAEAZ,OAAA;MAAKa,SAAS,EAAC,8HAA8H;MAAAC,QAAA,gBACzId,OAAA,CAACJ,WAAW;QAACY,KAAK,EAAEL;MAAU;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAEhClB,OAAA;QAAKa,SAAS,EAAC,qBAAqB;QAAAC,QAAA,eACpCd,OAAA,CAACH,QAAQ;UAACQ,OAAO,EAAEA,OAAQ;UAACG,KAAK,EAAEL,SAAU;UAACgB,QAAQ,EAAER;QAAa;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL;EAAC;AAEd;;AAGI;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AAAAhB,EAAA,CA3GoBD,UAAU;AAAAmB,EAAA,GAAVnB,UAAU;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}