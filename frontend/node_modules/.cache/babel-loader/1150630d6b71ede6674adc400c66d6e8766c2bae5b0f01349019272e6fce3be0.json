{"ast":null,"code":"var _jsxFileName = \"/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/battle/CookieSelect.js\",\n  _s = $RefreshSig$();\nimport strawberry from '../../svg/strawberry.svg';\nimport gingerbrave from '../../svg/gingerbrave.svg';\nimport muscle from '../../svg/muscle.svg';\nimport CookieImage from './CookieImage';\nimport Dropdown from './Dropdown';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CookieSelect(cookies) {\n  _s();\n  cookies = cookies.cookies;\n  // console.log('in CookieSelect')\n  // const [cookies , setCookies] = useState(null)\n  // console.log(cookies)\n\n  // useEffect(() => {\n  //     console.log(\"use effect!\")\n  //     getCookies()\n  //         } ,[])\n\n  // console.log(cookies)\n\n  // // get cookies info from database\n  // function getCookies() {\n  // axios({\n  //     method: \"GET\",\n  //     url:\"cookies_db/\",\n  //     // '/api/cookies/?format=json'\n  //     // \n  //     }).then((response)=>{ // success\n  //         const data = response.data\n  //         setCookies(data)\n  //         console.log(response.data)\n\n  //     }).catch((error) => { // failure\n  //     if (error.response) {\n  //         console.log(error.response);\n  //         console.log(error.response.status);\n  //         console.log(error.response.headers);\n  //         }\n  //     })}\n\n  // use state for if cookie is selected or not\n  const [selection, setSelection] = useState(null);\n  // use state for entire cookie list object\n  // label: Name\n  // value: value given \n  // src: photo\n  // selected: selection boolean\n  // const [ cookies, setCookies ] = useState([{\n  //     label: 'Strawberry Cookie',\n  //     value: 'strawberry',\n  // src: strawberry,\n  //     selected: false,\n  // }, {\n  //     label: 'Gingerbrave',\n  //     value: 'gingerbrave',\n  //     src: gingerbrave,\n  //     selected: false,\n  // }, {\n  //     label: 'Muscle Cookie',\n  //     value: 'muscle',\n  //     src: muscle,\n  //     selected: false,\n  // },{\n  //     label: 'Wizard Cookie',\n  //     value: 'wizard',\n  //     src: gingerbrave,\n  //     selected: false,\n  // },{\n  //     label: 'Beet Cookie',\n  //     value: 'beet',\n  //     src: gingerbrave,\n  //     selected: false,\n  // },{\n  //     label: 'Angel Cookie',\n  //     value: 'angel',\n  //     src: gingerbrave,\n  //     selected: false,\n  // }]);\n\n  // function to select cookie\n  const handleSelect = cookie => {\n    setSelection(cookie);\n  };\n  if (cookies) {\n    return (\n      /*#__PURE__*/\n      // <div className=\"block rounded-xl border border-gray-100 p-4 shadow-sm hover:border-gray-200 hover:ring-1 hover:ring-gray-200 focus:outline-none focus:ring\">        \n      //     <CookieImage value={selection}/>\n      //     <Dropdown cookies={cookies} value={selection} onChange={handleSelect} />\n      //     {/* <h2 className=\"mt-2 font-bold\">Add Cookie</h2> */}\n      // </div>\n      _jsxDEV(\"div\", {\n        className: \"block rounded-xl border border-secondary p-4 shadow-sm hover:border-gray-700 hover:ring-1 hover:ring-gray-200 focus:outline-none focus:ring \",\n        children: [/*#__PURE__*/_jsxDEV(CookieImage, {\n          value: selection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center\",\n          children: /*#__PURE__*/_jsxDEV(Dropdown, {\n            cookies: cookies,\n            value: selection,\n            onChange: handleSelect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)\n    );\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"block rounded-xl border border-secondary p-4 shadow-sm hover:border-gray-700 hover:ring-1 hover:ring-gray-200 focus:outline-none focus:ring \",\n    children: [/*#__PURE__*/_jsxDEV(CookieImage, {\n      value: selection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n}\n\n// handleCommentEdit: function(id, text) {\n//     this.setState({\n//       data: this.state.data.map(el => (el.id === id ? Object.assign({}, el, { text }) : el))\n//     });\n// }\n\n// setCookies\n\n// cookies = [{\n//     label: 'Strawberry Cookie',\n//     value: 'strawberry',\n//     src: strawberry,\n//     selected: false,\n// }, {\n//     label: 'Gingerbrave',\n//     value: 'gingerbrave',\n//     src: gingerbrave,\n//     selected: false,\n// }, {\n//     label: 'Muscle Cookie',\n//     value: 'muscle',\n//     src: gingerbrave,\n//     selected: false,\n// },{\n//     label: 'Wizard Cookie',\n//     value: 'wizard',\n//     src: gingerbrave,\n//     selected: false,\n// },{\n//     label: 'Beet Cookie',\n//     value: 'beet',\n//     src: gingerbrave,\n//     selected: false,\n// },{\n//     label: 'Angel Cookie',\n//     value: 'angel',\n//     src: gingerbrave,\n//     selected: false,\n// }];\n\n// const listCookies = cookies.map(cookie =>\n\n// );\n_s(CookieSelect, \"qfWQmOnlPn3slFBUVKwO1AsKooA=\");\n_c = CookieSelect;\nvar _c;\n$RefreshReg$(_c, \"CookieSelect\");","map":{"version":3,"names":["strawberry","gingerbrave","muscle","CookieImage","Dropdown","axios","useState","useEffect","jsxDEV","_jsxDEV","CookieSelect","cookies","_s","selection","setSelection","handleSelect","cookie","className","children","value","fileName","_jsxFileName","lineNumber","columnNumber","onChange","_c","$RefreshReg$"],"sources":["/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/battle/CookieSelect.js"],"sourcesContent":["import strawberry from '../../svg/strawberry.svg'\nimport gingerbrave from '../../svg/gingerbrave.svg'\nimport muscle from '../../svg/muscle.svg'\nimport CookieImage from './CookieImage'\nimport Dropdown from './Dropdown'\nimport axios from 'axios';\n\nimport { useState, useEffect } from 'react';\n\nexport default function CookieSelect(cookies) {\n    cookies = cookies.cookies\n    // console.log('in CookieSelect')\n    // const [cookies , setCookies] = useState(null)\n    // console.log(cookies)\n\n    // useEffect(() => {\n    //     console.log(\"use effect!\")\n    //     getCookies()\n    //         } ,[])\n\n    // console.log(cookies)\n    \n    // // get cookies info from database\n    // function getCookies() {\n    // axios({\n    //     method: \"GET\",\n    //     url:\"cookies_db/\",\n    //     // '/api/cookies/?format=json'\n    //     // \n    //     }).then((response)=>{ // success\n    //         const data = response.data\n    //         setCookies(data)\n    //         console.log(response.data)\n\n    //     }).catch((error) => { // failure\n    //     if (error.response) {\n    //         console.log(error.response);\n    //         console.log(error.response.status);\n    //         console.log(error.response.headers);\n    //         }\n    //     })}\n\n\n\n\n    // use state for if cookie is selected or not\n    const [ selection, setSelection ] = useState(null);\n    // use state for entire cookie list object\n    // label: Name\n    // value: value given \n    // src: photo\n    // selected: selection boolean\n    // const [ cookies, setCookies ] = useState([{\n    //     label: 'Strawberry Cookie',\n    //     value: 'strawberry',\n        // src: strawberry,\n    //     selected: false,\n    // }, {\n    //     label: 'Gingerbrave',\n    //     value: 'gingerbrave',\n    //     src: gingerbrave,\n    //     selected: false,\n    // }, {\n    //     label: 'Muscle Cookie',\n    //     value: 'muscle',\n    //     src: muscle,\n    //     selected: false,\n    // },{\n    //     label: 'Wizard Cookie',\n    //     value: 'wizard',\n    //     src: gingerbrave,\n    //     selected: false,\n    // },{\n    //     label: 'Beet Cookie',\n    //     value: 'beet',\n    //     src: gingerbrave,\n    //     selected: false,\n    // },{\n    //     label: 'Angel Cookie',\n    //     value: 'angel',\n    //     src: gingerbrave,\n    //     selected: false,\n    // }]);\n\n\n    // function to select cookie\n    const handleSelect = (cookie) => {\n        setSelection(cookie);\n    };\n\n\n    if (cookies) {\n        return (\n            // <div className=\"block rounded-xl border border-gray-100 p-4 shadow-sm hover:border-gray-200 hover:ring-1 hover:ring-gray-200 focus:outline-none focus:ring\">        \n            //     <CookieImage value={selection}/>\n    \n            //     <Dropdown cookies={cookies} value={selection} onChange={handleSelect} />\n            //     {/* <h2 className=\"mt-2 font-bold\">Add Cookie</h2> */}\n            // </div>\n            \n            <div className=\"block rounded-xl border border-secondary p-4 shadow-sm hover:border-gray-700 hover:ring-1 hover:ring-gray-200 focus:outline-none focus:ring \">        \n                <CookieImage value={selection}/>\n     \n    \n                <div className='flex justify-center'>\n                <Dropdown cookies={cookies} value={selection} onChange={handleSelect} />\n                </div>\n                {/* <h2 className=\"mt-2 font-bold\">Add Cookie</h2> */}\n            </div>\n        );\n    }\n    return (\n        <div className=\"block rounded-xl border border-secondary p-4 shadow-sm hover:border-gray-700 hover:ring-1 hover:ring-gray-200 focus:outline-none focus:ring \">        \n                <CookieImage value={selection}/>\n     \n    \n                <div className='flex justify-center'>\n                {/* <Dropdown cookies={cookies} value={selection} onChange={handleSelect} /> */}\n                </div>\n                {/* <h2 className=\"mt-2 font-bold\">Add Cookie</h2> */}\n            </div>\n    );\n    \n}\n\n\n    // handleCommentEdit: function(id, text) {\n    //     this.setState({\n    //       data: this.state.data.map(el => (el.id === id ? Object.assign({}, el, { text }) : el))\n    //     });\n    // }\n\n    // setCookies\n\n    // cookies = [{\n    //     label: 'Strawberry Cookie',\n    //     value: 'strawberry',\n    //     src: strawberry,\n    //     selected: false,\n    // }, {\n    //     label: 'Gingerbrave',\n    //     value: 'gingerbrave',\n    //     src: gingerbrave,\n    //     selected: false,\n    // }, {\n    //     label: 'Muscle Cookie',\n    //     value: 'muscle',\n    //     src: gingerbrave,\n    //     selected: false,\n    // },{\n    //     label: 'Wizard Cookie',\n    //     value: 'wizard',\n    //     src: gingerbrave,\n    //     selected: false,\n    // },{\n    //     label: 'Beet Cookie',\n    //     value: 'beet',\n    //     src: gingerbrave,\n    //     selected: false,\n    // },{\n    //     label: 'Angel Cookie',\n    //     value: 'angel',\n    //     src: gingerbrave,\n    //     selected: false,\n    // }];\n\n    // const listCookies = cookies.map(cookie =>\n        \n    // );"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,0BAA0B;AACjD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,YAAYA,CAACC,OAAO,EAAE;EAAAC,EAAA;EAC1CD,OAAO,GAAGA,OAAO,CAACA,OAAO;EACzB;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAKA;EACA,MAAM,CAAEE,SAAS,EAAEC,YAAY,CAAE,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAClD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACI;EACJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA,MAAMS,YAAY,GAAIC,MAAM,IAAK;IAC7BF,YAAY,CAACE,MAAM,CAAC;EACxB,CAAC;EAGD,IAAIL,OAAO,EAAE;IACT;MAAA;MACI;MACA;MAEA;MACA;MACA;MAEAF,OAAA;QAAKQ,SAAS,EAAC,8IAA8I;QAAAC,QAAA,gBACzJT,OAAA,CAACN,WAAW;UAACgB,KAAK,EAAEN;QAAU;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAGhCd,OAAA;UAAKQ,SAAS,EAAC,qBAAqB;UAAAC,QAAA,eACpCT,OAAA,CAACL,QAAQ;YAACO,OAAO,EAAEA,OAAQ;YAACQ,KAAK,EAAEN,SAAU;YAACW,QAAQ,EAAET;UAAa;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEL;IAAC;EAEd;EACA,oBACId,OAAA;IAAKQ,SAAS,EAAC,8IAA8I;IAAAC,QAAA,gBACrJT,OAAA,CAACN,WAAW;MAACgB,KAAK,EAAEN;IAAU;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAGhCd,OAAA;MAAKQ,SAAS,EAAC;IAAqB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE/B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAGlB;;AAGI;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AAAAX,EAAA,CA/JoBF,YAAY;AAAAe,EAAA,GAAZf,YAAY;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}