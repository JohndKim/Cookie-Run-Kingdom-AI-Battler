[{"/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/index.js":"1","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/App.js":"2","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/pages/Home.js":"3","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/pages/About.js":"4","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/universal/Navbar.js":"5","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/battle/FightButton.js":"6","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/about/AboutSection.js":"7","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/cookies/AddCookie.js":"8","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/battle/BattleInputs.js":"9","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/banner/BannerImage.js":"10","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/banner/Banner.js":"11","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/cookies/CookieTable.js":"12","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/cookies/CookieTableRow.js":"13","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/battle/CookieList.js":"14","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/battle/CookieImage.js":"15","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/battle/Dropdown.js":"16","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/pages/Battle.js":"17","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/pages/Cookies.js":"18","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/universal/CSRFToken.js":"19"},{"size":306,"mtime":1690277528220,"results":"20","hashOfConfig":"21"},{"size":746,"mtime":1691043899177,"results":"22","hashOfConfig":"21"},{"size":323,"mtime":1691030393997,"results":"23","hashOfConfig":"21"},{"size":393,"mtime":1691031150429,"results":"24","hashOfConfig":"21"},{"size":2143,"mtime":1691043935685,"results":"25","hashOfConfig":"21"},{"size":584,"mtime":1691032237468,"results":"26","hashOfConfig":"21"},{"size":12511,"mtime":1691032056112,"results":"27","hashOfConfig":"21"},{"size":10172,"mtime":1691136226233,"results":"28","hashOfConfig":"21"},{"size":1125,"mtime":1691033689162,"results":"29","hashOfConfig":"21"},{"size":2435,"mtime":1691048350305,"results":"30","hashOfConfig":"21"},{"size":3146,"mtime":1691135494861,"results":"31","hashOfConfig":"21"},{"size":4108,"mtime":1690959312971,"results":"32","hashOfConfig":"21"},{"size":1367,"mtime":1691051111282,"results":"33","hashOfConfig":"21"},{"size":3394,"mtime":1691044195196,"results":"34","hashOfConfig":"21"},{"size":2457,"mtime":1691032948718,"results":"35","hashOfConfig":"21"},{"size":2621,"mtime":1691033821502,"results":"36","hashOfConfig":"21"},{"size":532,"mtime":1691033476679,"results":"37","hashOfConfig":"21"},{"size":320,"mtime":1691049452580,"results":"38","hashOfConfig":"21"},{"size":830,"mtime":1691128657014,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"lqm69h",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"43"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"43"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"43"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"43"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/index.js",[],[],[],"/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/App.js",[],[],"/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/pages/Home.js",["104"],[],"import Navbar from '../components/universal/Navbar';\nimport Banner from '../components/banner/Banner';\nimport BannerImage from '../components/banner/BannerImage'\n\n\nexport default function Home() {\n  return (\n    <>\n      <div>\n        <Navbar/>\n        {/* <BannerImage /> */}\n        <Banner />\n      </div>\n    </>\n  );\n}","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/pages/About.js",[],[],"/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/universal/Navbar.js",[],[],"/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/battle/FightButton.js",[],[],"/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/about/AboutSection.js",[],[],"/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/cookies/AddCookie.js",["105"],[],"import {useState, useEffect} from \"react\";\nimport CSRFToken from \"../universal/CSRFToken\";\nimport CookieTable from \"./CookieTable\";\nimport CookieTableRow from \"./CookieTableRow\";\nimport axios from \"axios\";\n\n// CSRF TOKEN TO ENSURE ACCESS TO DB\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\n// should be like cookie info\nfunction AddCookie() {\n    const [cookies , setCookies] = useState(null)\n    const [formCookie, setFormCookie] = useState({ // form cookie data\n            name: '',\n            rarity: '',\n            attack: 0,\n            defense: 0,\n            health: 0,\n            description: \"\",\n          })\n\n    // so getCookies runs right after render is displayed\n    useEffect(() => {\n    getCookies()\n        } ,[])\n\n    // get cookies info from database\n    function getCookies() {\n    axios({\n        method: \"GET\",\n        url:\"cookies_db/\",\n        // '/api/cookies/?format=json'\n        // \n        }).then((response)=>{ // success\n            const data = response.data\n            setCookies(data)\n\n        }).catch((error) => { // failure\n        if (error.response) {\n            console.log(error.response);\n            console.log(error.response.status);\n            console.log(error.response.headers);\n            }\n        })}\n\n    // send new cookies info to database\n    function createCookie(event) {\n        axios({\n            method: \"POST\",\n            url:\"cookies_db/\",\n            data:{\n                name: formCookie.name,\n                rarity: formCookie.rarity,\n                attack: formCookie.attack,\n                defense: formCookie.defense,\n                health: formCookie.health,\n                description: formCookie.description,\n            }\n        })\n\n        .then((response) => { // success\n            console.log(\"cookie added!\")\n            console.log(response)\n            getCookies()\n\n        }).catch((error) => { // failure\n            if (error.response) {\n                console.log(error.response);\n                console.log(error.response.data);\n                console.log(error.response.status);\n                console.log(error.response.headers);\n        }})\n\n\n\n        console.log(\"mandatory response;;\")\n        console.log(event)\n    \n        // reset form input\n        setFormCookie(({\n            name: '',\n            rarity: '',\n            attack: 0,\n            defense: 0,\n            health: 0,\n            description: \"\",}))\n    \n        // prevents page reload\n        event.preventDefault()\n    }\n\n    // delete cookie based on id\n    function deleteCookie(id) {\n        axios({\n          method: \"DELETE\",\n          url:`/api/cookies/${id}/`,\n        })\n        .then((response) => {\n          getCookies()\n        });\n    }\n\n    function handleChange(event) { \n        const {value, name} = event.target\n        setFormCookie(prevCookie => ({\n            ...prevCookie, [name]: value})\n    )}\n\n\n    // console.log(cookies)\n\n    return(\n        <div>\n            <div className='h-screen bg-background pt-6'>\n                {/* TABLE */}\n                <div className=\"mx-16 bg-primary/10 h-full border-2 border-primary/40 rounded\">\n                {/* ENTIRE TABLE */}\n                    <table className=\"table-fixed min-w-full max-w-full divide-y-2 divide-primary text-sm\">\n                        {/* TABLE HEAD */}\n                        <thead className=\"ltr:text-left rtl:text-right w-screen\">\n                            <tr className=\"text-black\">\n                                <th className=\"whitespace-nowrap px-4 py-2 font-medium \">\n                                Name\n                                </th>\n                                <th className=\"whitespace-nowrap px-4 py-2 font-medium\">\n                                Rarity\n                                </th>\n                                <th className=\"whitespace-nowrap px-4 py-2 font-medium\">\n                                Stats (ATK, DEF, HP)\n                                </th>\n                                <th className=\"whitespace-nowrap px-4 py-2 font-medium\">\n                                Description\n                                </th>\n                                <th className=\"px-4 py-2\"></th>\n                            </tr>\n                        </thead>\n\n                        {/* TABLE BODY */}\n                        <tbody className=\"divide-y divide-gray-200\">\n\n                            <CookieTableRow \n                            key={0}\n                            id={0}\n                            name={\"booo\"}\n                            rarity={\"common\"}\n                            attack={50}\n                            defense={30}\n                            health={20}\n                            description={\"booooooooooooooooooooooooooooooo booooooooooooooooooooooooooooooo booooooooooooooooooooooooooooooo booooooooooooooooooooooooooooooo booooooooooooooooooooooooooooooo booooooooooooooooooooooooooooooo booooooooooooooooooooooooooooooo booooooooooooooooooooooooooooooo booooooooooooooooooooooooooooooo oooooooooooooo oooooooooooooo oooooooooooooo oooooooooooooo oooooooooooooo ooooooo ooooooo ooooooo ooooooo ooooooo ooooooo ooooooo ooooooo ooooooo ooooooo ooooooo ooooooo \"}\n                            />\n\n                            {/* ROWS OF COOKIE */}\n                            { cookies && cookies.map(cookie => <CookieTableRow\n                            // key={cookie.id}\n                            // id={cookie.id}\n                            key={cookie.id}\n                            id={cookie.id}\n                            name={cookie.name}\n                            rarity={cookie.rarity}\n                            attack={cookie.attack}\n                            defense={cookie.defense}\n                            health={cookie.health}\n                            description={cookie.description} \n                            deletion ={deleteCookie}\n                            />)}\n                        </tbody>\n                    </table>\n                </div>\n                {/* POST COOKIE FORM */}\n                <form className=\"create-cookie bg-primary/10 shadow-md rounded px-8 pt-6 pb-8 my-6 mx-16 border-2 border-primary/40 rounded\">\n                    <CSRFToken />\n                    {/* name */}\n                    <input onChange={handleChange} text={formCookie.name} name=\"name\" placeholder=\"Name\" value={formCookie.name} className=\"shadow appearance-none border rounded w-1/4 py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline mx-5\"/>\n                    {/* rarity */}\n                    <input onChange={handleChange} text={formCookie.rarity} name=\"rarity\" placeholder=\"Rarity\" value={formCookie.rarity} className=\"shadow appearance-none border rounded w-1/4 py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline mx-5\"/>\n                    {/* attack */}\n                    <input onChange={handleChange} text={formCookie.attack} name=\"attack\" placeholder=\"Attack\" value={formCookie.attack} className=\"shadow appearance-none border rounded w-1/4 py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline mx-5\"/>\n                    {/* defense */}\n                    <input onChange={handleChange} text={formCookie.defense} name=\"defense\" placeholder=\"Defense\" value={formCookie.defense} className=\"shadow appearance-none border rounded w-1/4 py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline mx-5\"/>\n                    {/* health */}\n                    <input onChange={handleChange} text={formCookie.health} name=\"health\" placeholder=\"Health\" value={formCookie.health} className=\"shadow appearance-none border rounded w-1/4 py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline mx-5\"/>\n                    {/* description */}\n                    <textarea onChange={handleChange} name=\"description\" placeholder=\"Description\" value={formCookie.content} className=\"shadow appearance-none border rounded w-1/4 py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline mx-5\"/>\n                    {/* creates new cookie and adds to databse */}\n                    <button onClick={createCookie} className=\"bg-primary hover:bg-primary/90 text-white font-dmsans py-2 px-4 rounded focus:outline-none focus:shadow-outline\">Create Cookie</button>\n                </form>\n        </div>\n      </div>\n    );\n\n    // // let cookies = [{\n    // //         name: 'Berry Cookie',\n    // //         rarity: 'rare',\n    // //         attack: 0,\n    // //         defense: 0,\n    // //         health: 0,\n    // //         description: \"N/A\",\n    // //     }, {\n    // //         name: 'Angel Cookie',\n    // //         rarity: 'common',\n    // //         attack: 0,\n    // //         defense: 0,\n    // //         health: 0,\n    // //         description: \"N/A\",\n    // //     }];\n\n    // // Make a request for a user with a given ID\n    // axios.get('/api/cookies/?format=json')\n    // .then(function (response) {\n    //     // handle success\n    //     console.log(response.data);\n    //     console.log(response.data[0])\n    //     console.log(response.data[0]['name'])\n    //     console.log(response.data[0].name)\n\n    //     let c1 = response.data[0]\n\n    //     cookies[0].name = c1.name\n    //     console.log(cookies[0].name)\n    //     console.log(c1.name)\n    //     cookies[0].rarity = c1.rarity\n    //     cookies[0].attack = c1.attack\n    //     cookies[0].defense = c1.defense\n    //     cookies[0].health = c1.health\n    //     cookies[0].description = c1.description\n\n\n    //     // cookies[0].name, cookies[0].rarity, cookies[0].attack, cookies[0].defense, cookies[0].health, cookies[0].description = c1.name, c1.rarity, c1.attack, c1.defense, c1.health, c1.description\n\n    //     console.log(cookies)\n    //     console.log(c1)\n        \n\n\n    // })\n    // .catch(function (error) {\n    //     // handle error\n    //     console.log(error);\n    // })\n    // .finally(function () {\n    //     // always executed\n    // });\n}\n\nexport default AddCookie;","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/battle/BattleInputs.js",[],[],"/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/banner/BannerImage.js",[],[],"/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/banner/Banner.js",[],[],"/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/cookies/CookieTable.js",["106","107"],[],"\n\nexport default function CookieTable({ cookies, value, onChange}) {\n\n\n    //   return (\n    //       <div className=\"note\">\n    //         <h1 >  Title: {props.title} </h1>\n    //         <p > Content: {props.content}</p>\n    //         <button onClick={handleClick}>Delete</button>\n    //       </div>\n    //   )\n    // }\n\n  return(\n    <>\n    <div className=\"overflow-x-auto\">\n        {/* ENTIRE TABLE */}\n        <table className=\"min-w-full divide-y-2 divide-gray-200 bg-white text-sm\">\n            {/* TABLE HEAD */}\n            <thead className=\"ltr:text-left rtl:text-right\">\n                <tr>\n                    <th className=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900\">\n                    Name\n                    </th>\n                    <th className=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900\">\n                    Rarity\n                    </th>\n                    <th className=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900\">\n                    Stats (ATK, DEF, HP)\n                    </th>\n                    <th className=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900\">\n                    Description\n                    </th>\n                    <th className=\"px-4 py-2\"></th>\n                </tr>\n            </thead>\n\n            {/* TABLE BODY */}\n            <tbody className=\"divide-y divide-gray-200\">\n                {/* FIRST ROW */}\n                {/* <tr>\n                    <td className=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900\">\n                    {cookies[0].name}\n                    </td>\n                    <td className=\"whitespace-nowrap px-4 py-2 text-gray-700\">{cookies[0].rarity}</td>\n                    <td className=\"whitespace-nowrap px-4 py-2 text-gray-700\">{cookies[0].attack} {cookies[0].defense} {cookies[0].health}</td>\n                    <td className=\"whitespace-nowrap px-4 py-2 text-gray-700\">{cookies[0].description}</td>\n                    <td className=\"whitespace-nowrap px-4 py-2\">\n                    <a\n                        href=\"#\"\n                        className=\"inline-block rounded bg-indigo-600 px-4 py-2 text-xs font-medium text-white hover:bg-indigo-700\"\n                    >\n                        View\n                    </a>\n                    </td>\n                </tr> */}\n                {/* SECOND ROW */}\n                <tr>\n                    <td className=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900\">\n                    Jane Doe\n                    </td>\n                    <td className=\"whitespace-nowrap px-4 py-2 text-gray-700\">04/11/1980</td>\n                    <td className=\"whitespace-nowrap px-4 py-2 text-gray-700\">Web Designer</td>\n                    <td className=\"whitespace-nowrap px-4 py-2 text-gray-700\">$100,000</td>\n                    <td className=\"whitespace-nowrap px-4 py-2\">\n                    <a\n                        href=\"#\"\n                        className=\"inline-block rounded bg-indigo-600 px-4 py-2 text-xs font-medium text-white hover:bg-indigo-700\"\n                    >\n                        View\n                    </a>\n                    </td>\n                </tr>\n                {/* THIRD ROW */}\n                <tr>\n                    <td className=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900\">\n                    Gary Barlow\n                    </td>\n                    <td className=\"whitespace-nowrap px-4 py-2 text-gray-700\">24/05/1995</td>\n                    <td className=\"whitespace-nowrap px-4 py-2 text-gray-700\">Singer</td>\n                    <td className=\"whitespace-nowrap px-4 py-2 text-gray-700\">$20,000</td>\n                    <td className=\"whitespace-nowrap px-4 py-2\">\n                    <a\n                        href=\"#\"\n                        className=\"inline-block rounded bg-indigo-600 px-4 py-2 text-xs font-medium text-white hover:bg-indigo-700\"\n                    >\n                        View\n                    </a>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</>\n  );\n}","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/cookies/CookieTableRow.js",[],[],"/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/battle/CookieList.js",["108"],[],"import strawberry from '../../svg/strawberry.svg'\nimport gingerbrave from '../../svg/gingerbrave.svg'\nimport muscle from '../../svg/muscle.svg'\nimport CookieImage from './CookieImage'\nimport Dropdown from './Dropdown'\n\n\nimport { useState } from 'react';\n\nexport default function CookieList() {\n    // use state for if cookie is selected or not\n    const [ selection, setSelection ] = useState(null);\n    // use state for entire cookie list object\n    // label: Name\n    // value: value given \n    // src: photo\n    // selected: selection boolean\n    const [ cookies, setCookies ] = useState([{\n        label: 'Strawberry Cookie',\n        value: 'strawberry',\n        src: strawberry,\n        selected: false,\n    }, {\n        label: 'Gingerbrave',\n        value: 'gingerbrave',\n        src: gingerbrave,\n        selected: false,\n    }, {\n        label: 'Muscle Cookie',\n        value: 'muscle',\n        src: muscle,\n        selected: false,\n    },{\n        label: 'Wizard Cookie',\n        value: 'wizard',\n        src: gingerbrave,\n        selected: false,\n    },{\n        label: 'Beet Cookie',\n        value: 'beet',\n        src: gingerbrave,\n        selected: false,\n    },{\n        label: 'Angel Cookie',\n        value: 'angel',\n        src: gingerbrave,\n        selected: false,\n    }]);\n\n\n    // function to select cookie\n    const handleSelect = (cookie) => {\n        setSelection(cookie);\n    };\n    return (\n        // <div className=\"block rounded-xl border border-gray-100 p-4 shadow-sm hover:border-gray-200 hover:ring-1 hover:ring-gray-200 focus:outline-none focus:ring\">        \n        //     <CookieImage value={selection}/>\n\n        //     <Dropdown cookies={cookies} value={selection} onChange={handleSelect} />\n        //     {/* <h2 className=\"mt-2 font-bold\">Add Cookie</h2> */}\n        // </div>\n        \n        <div className=\"block rounded-xl border border-secondary p-4 shadow-sm hover:border-gray-700 hover:ring-1 hover:ring-gray-200 focus:outline-none focus:ring \">        \n            <CookieImage value={selection}/>\n \n\n            <div className='flex justify-center'>\n            <Dropdown cookies={cookies} value={selection} onChange={handleSelect} />\n            </div>\n            {/* <h2 className=\"mt-2 font-bold\">Add Cookie</h2> */}\n        </div>\n    );\n}\n\n\n    // handleCommentEdit: function(id, text) {\n    //     this.setState({\n    //       data: this.state.data.map(el => (el.id === id ? Object.assign({}, el, { text }) : el))\n    //     });\n    // }\n\n    // setCookies\n\n    // cookies = [{\n    //     label: 'Strawberry Cookie',\n    //     value: 'strawberry',\n    //     src: strawberry,\n    //     selected: false,\n    // }, {\n    //     label: 'Gingerbrave',\n    //     value: 'gingerbrave',\n    //     src: gingerbrave,\n    //     selected: false,\n    // }, {\n    //     label: 'Muscle Cookie',\n    //     value: 'muscle',\n    //     src: gingerbrave,\n    //     selected: false,\n    // },{\n    //     label: 'Wizard Cookie',\n    //     value: 'wizard',\n    //     src: gingerbrave,\n    //     selected: false,\n    // },{\n    //     label: 'Beet Cookie',\n    //     value: 'beet',\n    //     src: gingerbrave,\n    //     selected: false,\n    // },{\n    //     label: 'Angel Cookie',\n    //     value: 'angel',\n    //     src: gingerbrave,\n    //     selected: false,\n    // }];\n\n    // const listCookies = cookies.map(cookie =>\n        \n    // );","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/battle/CookieImage.js",["109","110","111"],[],"import { useState, useEffect, useRef } from 'react';\n\nfunction CookieImage({value}) {\n\n    // console.log(cookies, value)\n    // const selectedCookie = cookies.filter(cookies => cookies.value === value.value);\n\n    // return(\n    //     {data.map(({ id, title,description, img }) => (\n    //         <div key={id} className=\"guest--item swiper-slide\">\n    //           <div>\n    //             <img key={id} src={img} alt='mySvgImage' />\n    //              <h1>{title}</h1>\n    //              <h2>{description}</h2>\n    //           </div>\n    //         </div>\n    //        ))}\n    // );\n\n    // NO COOKIE SELECTED\n    if (!value) {\n        return(\n        <div className = \"flex justify-center\">\n            {/* GRAY PADDING AROUND IMG */}\n            <span className=\"inline-block rounded-lg bg-secondary p-3\">\n\n                {/* IMAGE */}        \n\n\n                {/* {value?.label || 'Select a Cookie'} */}\n\n                {/*needs to be change with a sign with add icon for cookie */}\n                <svg\n                className=\"h-6 w-6\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                <path d=\"M12 14l9-5-9-5-9 5 9 5z\"></path>\n                <path\n                    d=\"M12 14l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14z\"\n                ></path>\n                <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                    d=\"M12 14l9-5-9-5-9 5 9 5zm0 0l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14zm-4 6v-7.5l4-2.222\"\n                ></path>\n                </svg>\n            </span>\n        </div>\n        );\n        // SELECTED COOKIE\n    } else {\n        return(\n            <div className = \"flex justify-center\">\n                {/* GRAY PADDING AROUND IMG */}\n                <span className=\"inline-block rounded-lg bg-secondary p-3\">\n    \n                    {/* IMAGE */}\n\n                    {/* {value?.label || 'Select a Cookie'} */}\n                    <img alt=\"cookie\" src={value.src} style={{width: 50, height: 50}}/>\n                </span>\n            </div>\n            );\n    }\n}\n\nexport default CookieImage;","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/battle/Dropdown.js",["112"],[],"import { useState, useEffect, useRef } from 'react';\n\nfunction Dropdown({ cookies, value, onChange}) {\n    // currently dropdown is closed\n    const [ isOpen, setIsOpen ] = useState(false); \n    const divEl = useRef();\n\n    // checks if click outside dropdown --> if outside, close dropdown\n    useEffect(() => {\n        const handler = (event) => {\n            if (!divEl.current) {\n\n                return;\n            }\n\n            if (!divEl.current.contains(event.target)) {\n                setIsOpen(false);\n            }\n        };\n\n        document.addEventListener('click', handler, true);\n\n        return () => {\n            document.removeEventListener('click', handler);\n        };\n    }, []);\n\n\n    // when clicked, open or close []\n    const handleClick = () => {\n        setIsOpen(!isOpen);\n    }\n\n    // when cookie selected --> 1. close dropdown; 2. select cookie\n    const handleCookieClick = (cookie) => {\n        setIsOpen(false);\n        onChange(cookie);\n        \n    }\n\n\n    // show list of all cookies\n\n    const renderedCookies = cookies.map((cookie) => {\n        // if a cookie is selected\n        if (value && cookie.value == value.value) {\n            return (\n                // when clicked, close dropdown and select cookie\n                    <div className=\"bg-gray-400 rounded cursor-pointer p-1\" onClick={() => handleCookieClick(cookie)} key={cookie.value}>{cookie.label}</div>\n            );\n        }\n\n        return (\n            // when clicked, close dropdown and select cookie\n            <div className=\"hover:bg-sky-100 rounded cursor-pointer p-1\" onClick={() => handleCookieClick(cookie)} key={cookie.value}>{cookie.label}\n            </div>\n        );\n    });\n\n    // update selected cookie\n    // let content = \"Select a Cookie\";\n    // if (selection) {\n    //     content = selection.label;\n    // }\n\n    console.log(value);\n\n    // return everything from before\n    return (\n        <>\n        {/* <AddPicture cookies={cookies} value={value}/> */}\n        <div ref={divEl} className=\"w-48 hover:cursor-pointer\">\n        \n            {/*hover fix needed because it only does the text and not the full box, wip */}\n            <div className=\"px-4 py-2 text-sm text-black text-center font-medium\" onClick={handleClick}>{value?.label || 'Select a Cookie'}</div>\n            {/* if open, then show cookie list */}\n            {isOpen && <div className=\"absolute rounded-lg p-3 text-sm text-black bg-background\">{renderedCookies}</div>}\n        </div>\n        {/* <h2 className=\"mt-2 font-bold\">{value?.label || 'Cookie'}</h2> */}\n        </>\n    );\n}\n\nexport default Dropdown;","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/pages/Battle.js",[],[],"/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/pages/Cookies.js",[],[],"/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/universal/CSRFToken.js",[],[],{"ruleId":"113","severity":1,"message":"114","line":3,"column":8,"nodeType":"115","messageId":"116","endLine":3,"endColumn":19},{"ruleId":"113","severity":1,"message":"117","line":3,"column":8,"nodeType":"115","messageId":"116","endLine":3,"endColumn":19},{"ruleId":"118","severity":1,"message":"119","line":67,"column":21,"nodeType":"120","endLine":70,"endColumn":22},{"ruleId":"118","severity":1,"message":"119","line":84,"column":21,"nodeType":"120","endLine":87,"endColumn":22},{"ruleId":"113","severity":1,"message":"121","line":18,"column":22,"nodeType":"115","messageId":"116","endLine":18,"endColumn":32},{"ruleId":"113","severity":1,"message":"122","line":1,"column":10,"nodeType":"115","messageId":"116","endLine":1,"endColumn":18},{"ruleId":"113","severity":1,"message":"123","line":1,"column":20,"nodeType":"115","messageId":"116","endLine":1,"endColumn":29},{"ruleId":"113","severity":1,"message":"124","line":1,"column":31,"nodeType":"115","messageId":"116","endLine":1,"endColumn":37},{"ruleId":"125","severity":1,"message":"126","line":46,"column":35,"nodeType":"127","messageId":"128","endLine":46,"endColumn":37},"no-unused-vars","'BannerImage' is defined but never used.","Identifier","unusedVar","'CookieTable' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setCookies' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]