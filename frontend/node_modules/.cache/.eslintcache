[{"/Users/suesix/projects/react_projects/Cookie-Run-Kingdom-AI-Battler/frontend/src/index.js":"1","/Users/suesix/projects/react_projects/Cookie-Run-Kingdom-AI-Battler/frontend/src/App.js":"2","/Users/suesix/projects/react_projects/Cookie-Run-Kingdom-AI-Battler/frontend/src/pages/Home.js":"3","/Users/suesix/projects/react_projects/Cookie-Run-Kingdom-AI-Battler/frontend/src/pages/Battle.js":"4","/Users/suesix/projects/react_projects/Cookie-Run-Kingdom-AI-Battler/frontend/src/pages/Cookies.js":"5","/Users/suesix/projects/react_projects/Cookie-Run-Kingdom-AI-Battler/frontend/src/pages/About.js":"6","/Users/suesix/projects/react_projects/Cookie-Run-Kingdom-AI-Battler/frontend/src/components/banner/Banner.js":"7","/Users/suesix/projects/react_projects/Cookie-Run-Kingdom-AI-Battler/frontend/src/components/banner/BannerImage.js":"8","/Users/suesix/projects/react_projects/Cookie-Run-Kingdom-AI-Battler/frontend/src/components/universal/Navbar.js":"9","/Users/suesix/projects/react_projects/Cookie-Run-Kingdom-AI-Battler/frontend/src/components/cookies/AddCookie.js":"10","/Users/suesix/projects/react_projects/Cookie-Run-Kingdom-AI-Battler/frontend/src/components/battle/BattleInputs.js":"11","/Users/suesix/projects/react_projects/Cookie-Run-Kingdom-AI-Battler/frontend/src/components/battle/FightButton.js":"12","/Users/suesix/projects/react_projects/Cookie-Run-Kingdom-AI-Battler/frontend/src/components/about/AboutSection.js":"13","/Users/suesix/projects/react_projects/Cookie-Run-Kingdom-AI-Battler/frontend/src/components/universal/CSRFToken.js":"14","/Users/suesix/projects/react_projects/Cookie-Run-Kingdom-AI-Battler/frontend/src/components/cookies/CookieTableRow.js":"15","/Users/suesix/projects/react_projects/Cookie-Run-Kingdom-AI-Battler/frontend/src/components/battle/CookieSelect.js":"16","/Users/suesix/projects/react_projects/Cookie-Run-Kingdom-AI-Battler/frontend/src/components/battle/CookieImage.js":"17","/Users/suesix/projects/react_projects/Cookie-Run-Kingdom-AI-Battler/frontend/src/components/battle/Dropdown.js":"18"},{"size":306,"mtime":1691553677754,"results":"19","hashOfConfig":"20"},{"size":746,"mtime":1691553677737,"results":"21","hashOfConfig":"20"},{"size":323,"mtime":1691553677755,"results":"22","hashOfConfig":"20"},{"size":532,"mtime":1691553677755,"results":"23","hashOfConfig":"20"},{"size":320,"mtime":1691553677755,"results":"24","hashOfConfig":"20"},{"size":393,"mtime":1691553677755,"results":"25","hashOfConfig":"20"},{"size":3627,"mtime":1691553677738,"results":"26","hashOfConfig":"20"},{"size":2435,"mtime":1691553677738,"results":"27","hashOfConfig":"20"},{"size":2143,"mtime":1691553677741,"results":"28","hashOfConfig":"20"},{"size":10241,"mtime":1691553677740,"results":"29","hashOfConfig":"20"},{"size":2478,"mtime":1691628202013,"results":"30","hashOfConfig":"20"},{"size":768,"mtime":1691675275551,"results":"31","hashOfConfig":"20"},{"size":12511,"mtime":1691553677738,"results":"32","hashOfConfig":"20"},{"size":830,"mtime":1691553677741,"results":"33","hashOfConfig":"20"},{"size":1635,"mtime":1691553677740,"results":"34","hashOfConfig":"20"},{"size":5070,"mtime":1691553677739,"results":"35","hashOfConfig":"20"},{"size":2514,"mtime":1691619596099,"results":"36","hashOfConfig":"20"},{"size":2808,"mtime":1691619705288,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1v3niwk",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},"/Users/suesix/projects/react_projects/Cookie-Run-Kingdom-AI-Battler/frontend/src/index.js",[],[],"/Users/suesix/projects/react_projects/Cookie-Run-Kingdom-AI-Battler/frontend/src/App.js",[],[],"/Users/suesix/projects/react_projects/Cookie-Run-Kingdom-AI-Battler/frontend/src/pages/Home.js",["98"],[],"import Navbar from '../components/universal/Navbar';\nimport Banner from '../components/banner/Banner';\nimport BannerImage from '../components/banner/BannerImage'\n\n\nexport default function Home() {\n  return (\n    <>\n      <div>\n        <Navbar/>\n        {/* <BannerImage /> */}\n        <Banner />\n      </div>\n    </>\n  );\n}","/Users/suesix/projects/react_projects/Cookie-Run-Kingdom-AI-Battler/frontend/src/pages/Battle.js",[],[],"/Users/suesix/projects/react_projects/Cookie-Run-Kingdom-AI-Battler/frontend/src/pages/Cookies.js",[],[],"/Users/suesix/projects/react_projects/Cookie-Run-Kingdom-AI-Battler/frontend/src/pages/About.js",[],[],"/Users/suesix/projects/react_projects/Cookie-Run-Kingdom-AI-Battler/frontend/src/components/banner/Banner.js",["99"],[],"import { Link } from \"react-router-dom\";\nimport crunchy from \"../../images/crunchychipcookie.png\"\nimport React from \"react\";\nimport Typed from 'typed.js';\n\nfunction Banner() {\n\n  const el = React.useRef(null);\n  const desc = React.useRef(null);\n\n  React.useEffect(() => {\n    const typed_title = new Typed(el.current, {\n      strings: ['<i>Curious about your team comp?</i>', 'We gotcha covered.'],\n      typeSpeed: 50,\n      startDelay: 1500,\n      backSpeed: 10,\n      backDelay: 3000,\n      showCursor: false,\n\n    });\n\n    return () => {\n      // Destroy Typed instance during cleanup to stop animation\n      typed_title.destroy();\n    };\n  }, []);\n\n  React.useEffect(() => {\n    const typed_desc = new Typed(desc.current, {\n      strings: ['An AI-based battle simulator for the hit game, Cookie Run Kingdom, so that you can defeat all your enemies in the Arena.'],\n      typeSpeed: 70,\n      startDelay: 9000,\n      showCursor: false,\n      autoInsertCss: true,\n    });\n\n    return () => {\n      // Destroy Typed instance during cleanup to stop animation\n      typed_desc.destroy();\n    };\n  }, []);\n\n\n  return (\n    <section className=\"bg-background\">\n      {/* lg:flex lg:items-center lg:h-screen */}\n      {/* ALL */}\n      <div className=\"grid gap-4 grid-cols-2 mx-auto max-w-screen-xl px-4 py-32 lg:h-5/6\">\n        {/* LEFT TEXT */}\n        <div className=\"mx-auto max-w-xl text-left\">\n\n          {/* BIG TITLE */}\n          <h1 className=\"text-3xl font-semibold font-oswald sm:text-6xl text-black\">\n            Oh, you're a Cookie Run Kingdom Player.\n            {/* <br /> */}\n            {/* <br /> */}\n            <p className=\"text-sm sm:text-xl lg:text-3xl \">_____________________________________________</p>\n            <strong className=\"my-5 sm:text-6xl text-primary sm:block\">\n              {/* We'll help you. */}\n\n              <span ref={el} />\n            </strong>\n          </h1>\n\n          {/* SHORT INTRO */}\n          <p className=\"mt-4 sm:text-xl/relaxed text-black font-dmsans\">\n            {/* An AI-based battle simulator for hit game, Cookie Run Kingdom, so that you can defeat all your enemies in Arena. */}\n            <span ref={desc} />\n          </p>\n\n          {/* BUTTONS */}\n          <div className=\"mt-8 flex flex-wrap justify-center gap-4 font-dmsans\">\n            <Link to=\"/battle\">\n              <div className=\"block w-full rounded bg-primary px-12 py-3 text-sm font-medium text-white shadow  hover:opacity-90 focus:outline-none focus:ring active:bg-c2 sm:w-auto\">\n                Get Started\n              </div>\n            </Link>\n            <Link to=\"/about\">\n              <div className=\"block w-full rounded px-12 py-3 text-sm font-medium text-primary shadow hover:opacity-90  focus:outline-none focus:ring sm:w-auto\">\n                Learn More\n              </div>\n            </Link>\n          </div>\n        </div>\n\n        {/* RIGHT TEXT */}\n        <div className=\"mx-auto max-w-xl text-left\">\n          {/* GIF */}\n          <div className=\"place-self-center\" style={{width: 300, height: 300, opacity: 1}}>\n            <img src={crunchy}/>\n          </div>\n        \n\n          {/* SHORT INTRO */}\n          <p className=\"mt-4 sm:text-xl/relaxed text-black font-dmsans\">\n\n            <span ref={desc} />\n          </p>\n          \n\n        </div>\n\n        {/* IMAGE */}\n        {/* <div className=\"border border-green-700 relative bg-[url('./images/crkbg.jpeg')] bg-cover bg-center bg-no-repeat\"> \n      <div\n          className=\"absolute inset-0  bg-gradient-to-r from-white\"\n      ></div>\n    </div> */}\n      </div>\n    </section>\n\n  );\n}\n\nexport default Banner;","/Users/suesix/projects/react_projects/Cookie-Run-Kingdom-AI-Battler/frontend/src/components/banner/BannerImage.js",[],[],"/Users/suesix/projects/react_projects/Cookie-Run-Kingdom-AI-Battler/frontend/src/components/universal/Navbar.js",[],[],"/Users/suesix/projects/react_projects/Cookie-Run-Kingdom-AI-Battler/frontend/src/components/cookies/AddCookie.js",[],[],"/Users/suesix/projects/react_projects/Cookie-Run-Kingdom-AI-Battler/frontend/src/components/battle/BattleInputs.js",["100"],[],"import CookieSelect from './CookieSelect'\n// import Dropdown from './Dropdown'\n// import CookiesList from './CookiesList'\nimport { useState, useMemo } from 'react';\nimport axios from 'axios';\n\nfunction BattleInputs() {\n    // console.log('in battleinputs')\n    const [cookies , setCookies] = useState(null)\n\n    // getCookies()\n\n    // bro this thing doesnt run right away, it runs somehow one iteration late which means that the cookies are null for the first render????? which made stuff annoying\n    // hopefully this change works with useMemo\n    useMemo(() => {\n        console.log(\"use effect!\")\n        getCookies()\n    } ,[]);\n    \n\n    console.log(cookies)\n    \n    // get cookies info from database\n    function getCookies() {\n    axios({\n        method: \"GET\",\n        url:\"cookies_db/\",\n        // '/api/cookies/?format=json'\n        // \n        }).then((response)=>{ // success\n            const data = response.data\n            setCookies(data)\n            console.log(response.data)\n            console.log(cookies)\n\n        }).catch((error) => { // failure\n        if (error.response) {\n            console.log(error.response);\n            console.log(error.response.status);\n            console.log(error.response.headers);\n            }\n        })}\n\n\n        \n\n\n\n    return (\n        <section className=\"\">\n        {/* entire 5, 5 team layout*/}\n        <div className=\"max-w-screen-xl px-4 py-8 sm:px-6 sm:py-12 lg:px-8 lg:py-16\">\n            <div\n            className=\"grid grid-cols-1 gap-y-8 lg:grid-cols-2 lg:items-center lg:gap-x-16\"\n            >\n\n            {/* FIRST TEAM LAYOUT */}\n                <div className=\"grid grid-cols-2 gap-4 sm:grid-cols-3\">\n                    <CookieSelect cookies={cookies}/>\n                    <CookieSelect cookies={cookies}/>\n                    <CookieSelect cookies={cookies}/>\n                    <CookieSelect cookies={cookies}/>\n                    <CookieSelect cookies={cookies}/>\n\n\n\n                </div>\n\n            {/* SECOND TEAM LAYOUT */}\n\n                <div className=\"grid grid-cols-2 gap-4 sm:grid-cols-3\">\n                    <CookieSelect cookies={cookies}/>\n                    <CookieSelect cookies={cookies}/>\n                    <CookieSelect cookies={cookies}/>\n                    <CookieSelect cookies={cookies}/>\n                    <CookieSelect cookies={cookies}/>\n\n                </div>\n            </div>\n        </div>\n        </section>\n    );\n}\n\nexport default BattleInputs;","/Users/suesix/projects/react_projects/Cookie-Run-Kingdom-AI-Battler/frontend/src/components/battle/FightButton.js",[],[],"/Users/suesix/projects/react_projects/Cookie-Run-Kingdom-AI-Battler/frontend/src/components/about/AboutSection.js",[],[],"/Users/suesix/projects/react_projects/Cookie-Run-Kingdom-AI-Battler/frontend/src/components/universal/CSRFToken.js",[],[],"/Users/suesix/projects/react_projects/Cookie-Run-Kingdom-AI-Battler/frontend/src/components/cookies/CookieTableRow.js",[],[],"/Users/suesix/projects/react_projects/Cookie-Run-Kingdom-AI-Battler/frontend/src/components/battle/CookieSelect.js",["101","102","103","104","105"],[],"import strawberry from '../../svg/strawberry.svg'\nimport gingerbrave from '../../svg/gingerbrave.svg'\nimport muscle from '../../svg/muscle.svg'\nimport CookieImage from './CookieImage'\nimport Dropdown from './Dropdown'\nimport axios from 'axios';\n\nimport { useState, useEffect } from 'react';\n\nexport default function CookieSelect(cookies) {\n    cookies = cookies.cookies\n    // console.log('in CookieSelect')\n    // const [cookies , setCookies] = useState(null)\n    // console.log(cookies)\n\n    // useEffect(() => {\n    //     console.log(\"use effect!\")\n    //     getCookies()\n    //         } ,[])\n\n    // console.log(cookies)\n    \n    // // get cookies info from database\n    // function getCookies() {\n    // axios({\n    //     method: \"GET\",\n    //     url:\"cookies_db/\",\n    //     // '/api/cookies/?format=json'\n    //     // \n    //     }).then((response)=>{ // success\n    //         const data = response.data\n    //         setCookies(data)\n    //         console.log(response.data)\n\n    //     }).catch((error) => { // failure\n    //     if (error.response) {\n    //         console.log(error.response);\n    //         console.log(error.response.status);\n    //         console.log(error.response.headers);\n    //         }\n    //     })}\n\n\n\n\n    // use state for if cookie is selected or not\n    const [ selection, setSelection ] = useState(null);\n    // use state for entire cookie list object\n    // label: Name\n    // value: value given \n    // src: photo\n    // selected: selection boolean\n    // const [ cookies, setCookies ] = useState([{\n    //     label: 'Strawberry Cookie',\n    //     value: 'strawberry',\n        // src: strawberry,\n    //     selected: false,\n    // }, {\n    //     label: 'Gingerbrave',\n    //     value: 'gingerbrave',\n    //     src: gingerbrave,\n    //     selected: false,\n    // }, {\n    //     label: 'Muscle Cookie',\n    //     value: 'muscle',\n    //     src: muscle,\n    //     selected: false,\n    // },{\n    //     label: 'Wizard Cookie',\n    //     value: 'wizard',\n    //     src: gingerbrave,\n    //     selected: false,\n    // },{\n    //     label: 'Beet Cookie',\n    //     value: 'beet',\n    //     src: gingerbrave,\n    //     selected: false,\n    // },{\n    //     label: 'Angel Cookie',\n    //     value: 'angel',\n    //     src: gingerbrave,\n    //     selected: false,\n    // }]);\n\n\n    // function to select cookie\n    const handleSelect = (cookie) => {\n        setSelection(cookie);\n    };\n\n\n    if (cookies) {\n        return (\n            // <div className=\"block rounded-xl border border-gray-100 p-4 shadow-sm hover:border-gray-200 hover:ring-1 hover:ring-gray-200 focus:outline-none focus:ring\">        \n            //     <CookieImage value={selection}/>\n    \n            //     <Dropdown cookies={cookies} value={selection} onChange={handleSelect} />\n            //     {/* <h2 className=\"mt-2 font-bold\">Add Cookie</h2> */}\n            // </div>\n            \n            <div className=\"block rounded-xl border border-secondary p-4 shadow-sm hover:border-gray-700 hover:ring-1 hover:ring-gray-200 focus:outline-none focus:ring \">        \n                <CookieImage value={selection}/>\n     \n    \n                <div className='flex justify-center'>\n                <Dropdown cookies={cookies} value={selection} onChange={handleSelect} />\n                </div>\n                {/* <h2 className=\"mt-2 font-bold\">Add Cookie</h2> */}\n            </div>\n        );\n    }\n    return (\n        <div className=\"block rounded-xl border border-secondary p-4 shadow-sm hover:border-gray-700 hover:ring-1 hover:ring-gray-200 focus:outline-none focus:ring \">        \n                <CookieImage value={selection}/>\n     \n    \n                <div className='flex justify-center'>\n                {/* <Dropdown cookies={cookies} value={selection} onChange={handleSelect} /> */}\n                </div>\n                {/* <h2 className=\"mt-2 font-bold\">Add Cookie</h2> */}\n            </div>\n    );\n    \n}\n\n\n    // handleCommentEdit: function(id, text) {\n    //     this.setState({\n    //       data: this.state.data.map(el => (el.id === id ? Object.assign({}, el, { text }) : el))\n    //     });\n    // }\n\n    // setCookies\n\n    // cookies = [{\n    //     label: 'Strawberry Cookie',\n    //     value: 'strawberry',\n    //     src: strawberry,\n    //     selected: false,\n    // }, {\n    //     label: 'Gingerbrave',\n    //     value: 'gingerbrave',\n    //     src: gingerbrave,\n    //     selected: false,\n    // }, {\n    //     label: 'Muscle Cookie',\n    //     value: 'muscle',\n    //     src: gingerbrave,\n    //     selected: false,\n    // },{\n    //     label: 'Wizard Cookie',\n    //     value: 'wizard',\n    //     src: gingerbrave,\n    //     selected: false,\n    // },{\n    //     label: 'Beet Cookie',\n    //     value: 'beet',\n    //     src: gingerbrave,\n    //     selected: false,\n    // },{\n    //     label: 'Angel Cookie',\n    //     value: 'angel',\n    //     src: gingerbrave,\n    //     selected: false,\n    // }];\n\n    // const listCookies = cookies.map(cookie =>\n        \n    // );","/Users/suesix/projects/react_projects/Cookie-Run-Kingdom-AI-Battler/frontend/src/components/battle/CookieImage.js",["106","107","108"],[],"import { useState, useEffect, useRef } from 'react';\n\nfunction CookieImage({value}) {\n    // console.log(value)\n    // console.log(value.name)\n    // console.log(cookies, value)\n    // const selectedCookie = cookies.filter(cookies => cookies.value === value.value);\n\n    // return(\n    //     {data.map(({ id, title,description, img }) => (\n    //         <div key={id} className=\"guest--item swiper-slide\">\n    //           <div>\n    //             <img key={id} src={img} alt='mySvgImage' />\n    //              <h1>{title}</h1>\n    //              <h2>{description}</h2>\n    //           </div>\n    //         </div>\n    //        ))}\n    // );\n\n    // NO COOKIE SELECTED\n    if (!value) {\n        return(\n        <div className = \"flex justify-center\">\n            {/* GRAY PADDING AROUND IMG */}\n            <span className=\"inline-block rounded-lg bg-secondary p-3\">\n\n                {/* IMAGE */}        \n\n\n                {/* {value?.label || 'Select a Cookie'} */}\n\n                {/*needs to be change with a sign with add icon for cookie */}\n                <svg\n                className=\"h-6 w-6\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                <path d=\"M12 14l9-5-9-5-9 5 9 5z\"></path>\n                <path\n                    d=\"M12 14l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14z\"\n                ></path>\n                <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                    d=\"M12 14l9-5-9-5-9 5 9 5zm0 0l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14zm-4 6v-7.5l4-2.222\"\n                ></path>\n                </svg>\n            </span>\n        </div>\n        );\n        // SELECTED COOKIE\n    } else {\n        return(\n            <div className = \"flex justify-center\">\n                {/* GRAY PADDING AROUND IMG */}\n                <span className=\"inline-block rounded-lg bg-secondary p-3\">\n    \n                    {/* IMAGE */}\n\n                    {/* {value?.label || 'Select a Cookie'} */}\n                    <img alt=\"cookie\" src=\"strawberry\" style={{width: 50, height: 50}}/>\n                </span>\n            </div>\n            );\n    }\n}\n\nexport default CookieImage;","/Users/suesix/projects/react_projects/Cookie-Run-Kingdom-AI-Battler/frontend/src/components/battle/Dropdown.js",["109"],[],"import { useState, useEffect, useRef } from 'react';\n\nfunction Dropdown({ cookies, value, onChange}) {\n    // currently dropdown is closed\n    const [ isOpen, setIsOpen ] = useState(false); \n    const divEl = useRef();\n\n    // checks if click outside dropdown --> if outside, close dropdown\n    useEffect(() => {\n        const handler = (event) => {\n            if (!divEl.current) {\n\n                return;\n            }\n\n            if (!divEl.current.contains(event.target)) {\n                setIsOpen(false);\n            }\n        };\n\n        document.addEventListener('click', handler, true);\n\n        return () => {\n            document.removeEventListener('click', handler);\n        };\n    }, []);\n\n\n    // when clicked, open or close []\n    const handleClick = () => {\n        setIsOpen(!isOpen);\n    }\n\n    // when cookie selected --> 1. close dropdown; 2. select cookie\n    const handleCookieClick = (cookie) => {\n        setIsOpen(false);\n        onChange(cookie);\n        //Getting cookie value and adding it to the array of Cookies\n\n        console.log(cookie)\n    }\n\n\n    // show list of all cookiess\n    // console.log(cookies.cookies)\n    // const renderedCookies = null\n    const renderedCookies = cookies.map((cookie) => {\n    // if a cookie is selected\n        if (value && cookie.name == value.name) {\n            return (\n                // when clicked, close dropdown and select cookie\n                    <div className=\"bg-gray-400 rounded cursor-pointer p-1\" onClick={() => handleCookieClick(cookie)} key={cookie.name}>{cookie.name}</div>\n            );\n        }\n\n        return (\n            // when clicked, close dropdown and select cookie\n            <div className=\"hover:bg-sky-100 rounded cursor-pointer p-1\" onClick={() => handleCookieClick(cookie)} key={cookie.name}>{cookie.name}\n            </div>\n        );\n    });\n\n    console.log(renderedCookies)\n\n    // update selected cookie\n    // let content = \"Select a Cookie\";\n    // if (selection) {\n    //     content = selection.label;\n    // }\n\n    // console.log(value);\n\n    // return everything from before\n    return (\n        <>\n        {/* <AddPicture cookies={cookies} value={value}/> */}\n        <div ref={divEl} className=\"w-48 hover:cursor-pointer\">\n        \n            {/*hover fix needed because it only does the text and not the full box, wip */}\n            <div className=\"px-4 py-2 text-sm text-black text-center font-medium\" onClick={handleClick}>{value?.name || 'Select a Cookie'}</div>\n            {/* if open, then show cookie list */}\n            {isOpen && <div className=\"absolute rounded-lg p-3 text-sm text-black bg-background\">{renderedCookies}</div>}\n        </div>\n        {/* <h2 className=\"mt-2 font-bold\">{value?.label || 'Cookie'}</h2> */}\n        </>\n    );\n}\n\nexport default Dropdown;",{"ruleId":"110","severity":1,"message":"111","line":3,"column":8,"nodeType":"112","messageId":"113","endLine":3,"endColumn":19},{"ruleId":"114","severity":1,"message":"115","line":90,"column":13,"nodeType":"116","endLine":90,"endColumn":33},{"ruleId":"117","severity":1,"message":"118","line":18,"column":8,"nodeType":"119","endLine":18,"endColumn":10,"suggestions":"120"},{"ruleId":"110","severity":1,"message":"121","line":1,"column":8,"nodeType":"112","messageId":"113","endLine":1,"endColumn":18},{"ruleId":"110","severity":1,"message":"122","line":2,"column":8,"nodeType":"112","messageId":"113","endLine":2,"endColumn":19},{"ruleId":"110","severity":1,"message":"123","line":3,"column":8,"nodeType":"112","messageId":"113","endLine":3,"endColumn":14},{"ruleId":"110","severity":1,"message":"124","line":6,"column":8,"nodeType":"112","messageId":"113","endLine":6,"endColumn":13},{"ruleId":"110","severity":1,"message":"125","line":8,"column":20,"nodeType":"112","messageId":"113","endLine":8,"endColumn":29},{"ruleId":"110","severity":1,"message":"126","line":1,"column":10,"nodeType":"112","messageId":"113","endLine":1,"endColumn":18},{"ruleId":"110","severity":1,"message":"125","line":1,"column":20,"nodeType":"112","messageId":"113","endLine":1,"endColumn":29},{"ruleId":"110","severity":1,"message":"127","line":1,"column":31,"nodeType":"112","messageId":"113","endLine":1,"endColumn":37},{"ruleId":"128","severity":1,"message":"129","line":49,"column":34,"nodeType":"130","messageId":"131","endLine":49,"endColumn":36},"no-unused-vars","'BannerImage' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'getCookies'. Either include it or remove the dependency array.","ArrayExpression",["132"],"'strawberry' is defined but never used.","'gingerbrave' is defined but never used.","'muscle' is defined but never used.","'axios' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"133","fix":"134"},"Update the dependencies array to be: [getCookies]",{"range":"135","text":"136"},[630,632],"[getCookies]"]