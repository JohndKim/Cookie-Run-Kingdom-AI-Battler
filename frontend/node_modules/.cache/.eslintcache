[{"/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/index.js":"1","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/App.js":"2","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/pages/Battler.js":"3","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/pages/Home.js":"4","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/pages/Test.js":"5","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/pages/About.js":"6","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/BattleInputs.js":"7","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/BannerImage.js":"8","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/Navbar.js":"9","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/FightButton.js":"10","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/Banner.js":"11","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/AboutSection.js":"12","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/CookieList.js":"13","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/Dropdown.js":"14","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/CookieImage.js":"15","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/AddCookie.js":"16","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/CookieTable.js":"17","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/CookieTableRow.js":"18"},{"size":306,"mtime":1690277528220,"results":"19","hashOfConfig":"20"},{"size":736,"mtime":1690879093138,"results":"21","hashOfConfig":"20"},{"size":470,"mtime":1690355863505,"results":"22","hashOfConfig":"20"},{"size":299,"mtime":1690537014906,"results":"23","hashOfConfig":"20"},{"size":298,"mtime":1690948726085,"results":"24","hashOfConfig":"20"},{"size":389,"mtime":1690339139572,"results":"25","hashOfConfig":"20"},{"size":1112,"mtime":1690948525166,"results":"26","hashOfConfig":"20"},{"size":2435,"mtime":1690857919002,"results":"27","hashOfConfig":"20"},{"size":2096,"mtime":1690879279852,"results":"28","hashOfConfig":"20"},{"size":590,"mtime":1690355863505,"results":"29","hashOfConfig":"20"},{"size":1462,"mtime":1690460448225,"results":"30","hashOfConfig":"20"},{"size":12460,"mtime":1690460492544,"results":"31","hashOfConfig":"20"},{"size":2902,"mtime":1690960851528,"results":"32","hashOfConfig":"20"},{"size":2611,"mtime":1690857919003,"results":"33","hashOfConfig":"20"},{"size":2430,"mtime":1690857919002,"results":"34","hashOfConfig":"20"},{"size":7008,"mtime":1690973903191,"results":"35","hashOfConfig":"20"},{"size":4108,"mtime":1690959312971,"results":"36","hashOfConfig":"20"},{"size":907,"mtime":1690974132033,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lqm69h",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/index.js",[],[],"/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/App.js",[],[],"/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/pages/Battler.js",[],[],"/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/pages/Home.js",["99"],[],"import Navbar from '../components/Navbar';\nimport Banner from '../components/Banner';\nimport BannerImage from '../components/BannerImage'\n\n\nexport default function Home() {\n  return (\n    <>\n      <div>\n        <Navbar/>\n        <BannerImage />\n        {/* <Banner /> */}\n      </div>\n    </>\n  );\n}","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/pages/Test.js",[],[],"/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/pages/About.js",[],[],"/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/BattleInputs.js",[],[],"/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/BannerImage.js",[],[],"/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/Navbar.js",[],[],"/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/FightButton.js",[],[],"/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/Banner.js",[],[],"/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/AboutSection.js",[],[],"/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/CookieList.js",["100"],[],"import strawberry from '../svg/strawberry.svg'\nimport gingerbrave from '../svg/gingerbrave.svg'\nimport muscle from '../svg/muscle.svg'\nimport CookieImage from './CookieImage'\nimport Dropdown from './Dropdown'\n\n\nimport { useState } from 'react';\n\nexport default function CookieList() {\n    // use state for if cookie is selected or not\n    const [ selection, setSelection ] = useState(null);\n    // use state for entire cookie list object\n    // label: Name\n    // value: value given \n    // src: photo\n    // selected: selection boolean\n    const [ cookies, setCookies ] = useState([{\n        label: 'Strawberry Cookie',\n        value: 'strawberry',\n        src: strawberry,\n        selected: false,\n    }, {\n        label: 'Gingerbrave',\n        value: 'gingerbrave',\n        src: gingerbrave,\n        selected: false,\n    }, {\n        label: 'Muscle Cookie',\n        value: 'muscle',\n        src: muscle,\n        selected: false,\n    },{\n        label: 'Wizard Cookie',\n        value: 'wizard',\n        src: gingerbrave,\n        selected: false,\n    },{\n        label: 'Beet Cookie',\n        value: 'beet',\n        src: gingerbrave,\n        selected: false,\n    },{\n        label: 'Angel Cookie',\n        value: 'angel',\n        src: gingerbrave,\n        selected: false,\n    }]);\n\n\n    // function to select cookie\n    const handleSelect = (cookie) => {\n        setSelection(cookie);\n    };\n    return (\n        <div className=\"block rounded-xl border border-gray-100 p-4 shadow-sm hover:border-gray-200 hover:ring-1 hover:ring-gray-200 focus:outline-none focus:ring\">        \n            <CookieImage value={selection}/>\n\n            <Dropdown cookies={cookies} value={selection} onChange={handleSelect} />\n            {/* <h2 className=\"mt-2 font-bold\">Add Cookie</h2> */}\n        </div>\n    );\n}\n\n\n    // handleCommentEdit: function(id, text) {\n    //     this.setState({\n    //       data: this.state.data.map(el => (el.id === id ? Object.assign({}, el, { text }) : el))\n    //     });\n    // }\n\n    // setCookies\n\n    // cookies = [{\n    //     label: 'Strawberry Cookie',\n    //     value: 'strawberry',\n    //     src: strawberry,\n    //     selected: false,\n    // }, {\n    //     label: 'Gingerbrave',\n    //     value: 'gingerbrave',\n    //     src: gingerbrave,\n    //     selected: false,\n    // }, {\n    //     label: 'Muscle Cookie',\n    //     value: 'muscle',\n    //     src: gingerbrave,\n    //     selected: false,\n    // },{\n    //     label: 'Wizard Cookie',\n    //     value: 'wizard',\n    //     src: gingerbrave,\n    //     selected: false,\n    // },{\n    //     label: 'Beet Cookie',\n    //     value: 'beet',\n    //     src: gingerbrave,\n    //     selected: false,\n    // },{\n    //     label: 'Angel Cookie',\n    //     value: 'angel',\n    //     src: gingerbrave,\n    //     selected: false,\n    // }];\n\n    // const listCookies = cookies.map(cookie =>\n        \n    // );",[],"/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/Dropdown.js",["101"],[],"import { useState, useEffect, useRef } from 'react';\n\nfunction Dropdown({ cookies, value, onChange}) {\n    // currently dropdown is closed\n    const [ isOpen, setIsOpen ] = useState(false); \n    const divEl = useRef();\n\n    // checks if click outside dropdown --> if outside, close dropdown\n    useEffect(() => {\n        const handler = (event) => {\n            if (!divEl.current) {\n\n                return;\n            }\n\n            if (!divEl.current.contains(event.target)) {\n                setIsOpen(false);\n            }\n        };\n\n        document.addEventListener('click', handler, true);\n\n        return () => {\n            document.removeEventListener('click', handler);\n        };\n    }, []);\n\n\n    // when clicked, open or close []\n    const handleClick = () => {\n        setIsOpen(!isOpen);\n    }\n\n    // when cookie selected --> 1. close dropdown; 2. select cookie\n    const handleCookieClick = (cookie) => {\n        setIsOpen(false);\n        onChange(cookie);\n        \n    }\n\n\n    // show list of all cookies\n\n    const renderedCookies = cookies.map((cookie) => {\n        // if a cookie is selected\n        if (value && cookie.value == value.value) {\n            return (\n                // when clicked, close dropdown and select cookie\n                    <div className=\"bg-gray-400 rounded cursor-pointer p-1\" onClick={() => handleCookieClick(cookie)} key={cookie.value}>{cookie.label}</div>\n            );\n        }\n\n        return (\n            // when clicked, close dropdown and select cookie\n            <div className=\"hover:bg-sky-100 rounded cursor-pointer p-1\" onClick={() => handleCookieClick(cookie)} key={cookie.value}>{cookie.label}\n            </div>\n        );\n    });\n\n    // update selected cookie\n    // let content = \"Select a Cookie\";\n    // if (selection) {\n    //     content = selection.label;\n    // }\n\n    console.log(value);\n\n    // return everything from before\n    return (\n        <>\n        {/* <AddPicture cookies={cookies} value={value}/> */}\n        <div ref={divEl} className=\"w-48\">\n        \n            {/*hover fix needed because it only does the text and not the full box, wip */}\n            <div className=\"px-4 py-2 text-sm text-gray-600 font-medium\" onClick={handleClick}>{value?.label || 'Select a Cookie'}</div>\n            {/* if open, then show cookie list */}\n            {isOpen && <div className=\"absolute rounded-lg p-3 text-sm text-gray-500 bg-gray-50 hover:text-gray-700\">{renderedCookies}</div>}\n        </div>\n        {/* <h2 className=\"mt-2 font-bold\">{value?.label || 'Cookie'}</h2> */}\n        </>\n    );\n}\n\nexport default Dropdown;","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/CookieImage.js",["102","103","104"],[],"import { useState, useEffect, useRef } from 'react';\n\nfunction CookieImage({value}) {\n\n    // console.log(cookies, value)\n    // const selectedCookie = cookies.filter(cookies => cookies.value === value.value);\n\n    // return(\n    //     {data.map(({ id, title,description, img }) => (\n    //         <div key={id} className=\"guest--item swiper-slide\">\n    //           <div>\n    //             <img key={id} src={img} alt='mySvgImage' />\n    //              <h1>{title}</h1>\n    //              <h2>{description}</h2>\n    //           </div>\n    //         </div>\n    //        ))}\n    // );\n\n    if (!value) {\n        return(\n        <div className = \"flex justify-center\">\n            {/* GRAY PADDING AROUND IMG */}\n            <span className=\"inline-block rounded-lg bg-gray-50 p-3\">\n\n                {/* IMAGE */}        \n\n\n                {/* {value?.label || 'Select a Cookie'} */}\n\n                {/*needs to be change with a sign with add icon for cookie */}\n                <svg\n                className=\"h-6 w-6\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                <path d=\"M12 14l9-5-9-5-9 5 9 5z\"></path>\n                <path\n                    d=\"M12 14l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14z\"\n                ></path>\n                <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                    d=\"M12 14l9-5-9-5-9 5 9 5zm0 0l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14zm-4 6v-7.5l4-2.222\"\n                ></path>\n                </svg>\n            </span>\n        </div>\n        );\n    } else {\n        return(\n            <div className = \"flex justify-center\">\n                {/* GRAY PADDING AROUND IMG */}\n                <span className=\"inline-block rounded-lg bg-gray-50 p-3\">\n    \n                    {/* IMAGE */}\n                    \n    \n    \n                    {/* {value?.label || 'Select a Cookie'} */}\n                    <img alt=\"cookie\" src={value.src} style={{width: 50, height: 50}}/>\n                </span>\n            </div>\n            );\n    }\n}\n\nexport default CookieImage;","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/AddCookie.js",["105","106","107","108"],[],"import {useState, useEffect} from \"react\";\nimport CookieTable from \"./CookieTable\";\nimport CookieTableRow from \"./CookieTableRow\";\nimport axios from \"axios\";\n\n// should be like cookie info\nfunction AddCookie() {\n    const [cookies , setCookies] = useState(null)\n    const [formCookie, setFormCookie] = useState({ // form cookie data\n            name: '',\n            rarity: '',\n            attack: 0,\n            defense: 0,\n            health: 0,\n            description: \"\",\n          })\n\n    // so getCookies runs right after render is displayed\n    useEffect(() => {\n    getCookies()\n        } ,[])\n\n    // get cookies info from database\n    function getCookies() {\n    axios({\n        method: \"GET\",\n        url:\"/api/cookies/?format=json\",\n        // '/api/cookies/?format=json'\n        }).then((response)=>{ // success\n            const data = response.data\n            setCookies(data)\n\n        }).catch((error) => { // failure\n        if (error.response) {\n            console.log(error.response);\n            console.log(error.response.status);\n            console.log(error.response.headers);\n            }\n        })}\n\n    // send new cookies info to database\n    function createCookie(event) {\n        axios({\n            method: \"POST\",\n            url:\"/api/cookies\",\n            data:{\n                name: formCookie.name,\n                rarity: formCookie.rarity,\n                attack: formCookie.attack,\n                defense: formCookie.defense,\n                health: formCookie.health,\n                description: formCookie.description,\n            }\n        })\n\n        .then((response) => { // success\n            getCookies()\n        })\n    \n        // reset form input\n        setFormCookie(({\n            name: '',\n            rarity: '',\n            attack: 0,\n            defense: 0,\n            health: 0,\n            description: \"\",}))\n    \n        // prevents page reload\n        event.preventDefault()\n    }\n\n    // delete cookie based on id\n    function DeleteCookie(id) {\n        axios({\n          method: \"DELETE\",\n          url:`/api/cookies/${id}/`,\n        })\n        .then((response) => {\n          getCookies()\n        });\n    }\n\n    function handleChange(event) { \n        const {value, name} = event.target\n        setFormCookie(prevCookie => ({\n            ...prevCookie, [name]: value})\n    )}\n\n\n    console.log(cookies)\n\n    return(\n        <div className=''>\n            {/* ADD COOKIE FORM */}\n            {/* <form className=\"create-cookie\">\n                <input onChange={handleChange} text={formCookie.name} name=\"name\" placeholder=\"Name\" value={formCookie.name} />\n                <textarea onChange={handleChange} name=\"description\" placeholder=\"Add Cookie...\" value={formCookie.content} />\n                <button onClick={createCookie}>Create Cookie</button>\n            </form> */}\n\n            <div className=\"\">\n            {/* ENTIRE TABLE */}\n            <table className=\"table-fixed min-w-full max-w-full divide-y-2 divide-gray-200 bg-white text-sm\">\n                {/* TABLE HEAD */}\n                <thead className=\"ltr:text-left rtl:text-right w-screen\">\n                    <tr>\n                        <th className=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900\">\n                        Name\n                        </th>\n                        <th className=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900\">\n                        Rarity\n                        </th>\n                        <th className=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900\">\n                        Stats (ATK, DEF, HP)\n                        </th>\n                        <th className=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900\">\n                        Description\n                        </th>\n                        <th className=\"px-4 py-2\"></th>\n                    </tr>\n                </thead>\n\n                {/* TABLE BODY */}\n                <tbody className=\"divide-y divide-gray-200\">\n\n                    <CookieTableRow \n                    name={\"booo\"}\n                    rarity={\"common\"}\n                    attack={50}\n                    defense={30}\n                    health={20}\n                    description={\"booooooooooooooooooooooooooooooo booooooooooooooooooooooooooooooo booooooooooooooooooooooooooooooo booooooooooooooooooooooooooooooo booooooooooooooooooooooooooooooo booooooooooooooooooooooooooooooo booooooooooooooooooooooooooooooo booooooooooooooooooooooooooooooo booooooooooooooooooooooooooooooo oooooooooooooo oooooooooooooo oooooooooooooo oooooooooooooo oooooooooooooo ooooooo ooooooo ooooooo ooooooo ooooooo ooooooo ooooooo ooooooo ooooooo ooooooo ooooooo ooooooo \"}\n                    />\n\n                    {/* ROWS OF COOKIE */}\n                    { cookies && cookies.map(cookie => <CookieTableRow\n                    // key={cookie.id}\n                    // id={cookie.id}\n                    name={cookie.name}\n                    rarity={cookie.rarity}\n                    attack={cookie.attack}\n                    defense={cookie.defense}\n                    health={cookie.health}\n                    description={cookie.description} \n                    // deletion ={Deletecookie}\n                    />)}\n                </tbody>\n            </table>\n        </div>\n      </div>\n    );\n\n    // // let cookies = [{\n    // //         name: 'Berry Cookie',\n    // //         rarity: 'rare',\n    // //         attack: 0,\n    // //         defense: 0,\n    // //         health: 0,\n    // //         description: \"N/A\",\n    // //     }, {\n    // //         name: 'Angel Cookie',\n    // //         rarity: 'common',\n    // //         attack: 0,\n    // //         defense: 0,\n    // //         health: 0,\n    // //         description: \"N/A\",\n    // //     }];\n\n    // // Make a request for a user with a given ID\n    // axios.get('/api/cookies/?format=json')\n    // .then(function (response) {\n    //     // handle success\n    //     console.log(response.data);\n    //     console.log(response.data[0])\n    //     console.log(response.data[0]['name'])\n    //     console.log(response.data[0].name)\n\n    //     let c1 = response.data[0]\n\n    //     cookies[0].name = c1.name\n    //     console.log(cookies[0].name)\n    //     console.log(c1.name)\n    //     cookies[0].rarity = c1.rarity\n    //     cookies[0].attack = c1.attack\n    //     cookies[0].defense = c1.defense\n    //     cookies[0].health = c1.health\n    //     cookies[0].description = c1.description\n\n\n    //     // cookies[0].name, cookies[0].rarity, cookies[0].attack, cookies[0].defense, cookies[0].health, cookies[0].description = c1.name, c1.rarity, c1.attack, c1.defense, c1.health, c1.description\n\n    //     console.log(cookies)\n    //     console.log(c1)\n        \n\n\n    // })\n    // .catch(function (error) {\n    //     // handle error\n    //     console.log(error);\n    // })\n    // .finally(function () {\n    //     // always executed\n    // });\n}\n\nexport default AddCookie;","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/CookieTable.js",["109","110"],[],"\n\nexport default function CookieTable({ cookies, value, onChange}) {\n\n\n    //   return (\n    //       <div className=\"note\">\n    //         <h1 >  Title: {props.title} </h1>\n    //         <p > Content: {props.content}</p>\n    //         <button onClick={handleClick}>Delete</button>\n    //       </div>\n    //   )\n    // }\n\n  return(\n    <>\n    <div className=\"overflow-x-auto\">\n        {/* ENTIRE TABLE */}\n        <table className=\"min-w-full divide-y-2 divide-gray-200 bg-white text-sm\">\n            {/* TABLE HEAD */}\n            <thead className=\"ltr:text-left rtl:text-right\">\n                <tr>\n                    <th className=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900\">\n                    Name\n                    </th>\n                    <th className=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900\">\n                    Rarity\n                    </th>\n                    <th className=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900\">\n                    Stats (ATK, DEF, HP)\n                    </th>\n                    <th className=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900\">\n                    Description\n                    </th>\n                    <th className=\"px-4 py-2\"></th>\n                </tr>\n            </thead>\n\n            {/* TABLE BODY */}\n            <tbody className=\"divide-y divide-gray-200\">\n                {/* FIRST ROW */}\n                {/* <tr>\n                    <td className=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900\">\n                    {cookies[0].name}\n                    </td>\n                    <td className=\"whitespace-nowrap px-4 py-2 text-gray-700\">{cookies[0].rarity}</td>\n                    <td className=\"whitespace-nowrap px-4 py-2 text-gray-700\">{cookies[0].attack} {cookies[0].defense} {cookies[0].health}</td>\n                    <td className=\"whitespace-nowrap px-4 py-2 text-gray-700\">{cookies[0].description}</td>\n                    <td className=\"whitespace-nowrap px-4 py-2\">\n                    <a\n                        href=\"#\"\n                        className=\"inline-block rounded bg-indigo-600 px-4 py-2 text-xs font-medium text-white hover:bg-indigo-700\"\n                    >\n                        View\n                    </a>\n                    </td>\n                </tr> */}\n                {/* SECOND ROW */}\n                <tr>\n                    <td className=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900\">\n                    Jane Doe\n                    </td>\n                    <td className=\"whitespace-nowrap px-4 py-2 text-gray-700\">04/11/1980</td>\n                    <td className=\"whitespace-nowrap px-4 py-2 text-gray-700\">Web Designer</td>\n                    <td className=\"whitespace-nowrap px-4 py-2 text-gray-700\">$100,000</td>\n                    <td className=\"whitespace-nowrap px-4 py-2\">\n                    <a\n                        href=\"#\"\n                        className=\"inline-block rounded bg-indigo-600 px-4 py-2 text-xs font-medium text-white hover:bg-indigo-700\"\n                    >\n                        View\n                    </a>\n                    </td>\n                </tr>\n                {/* THIRD ROW */}\n                <tr>\n                    <td className=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900\">\n                    Gary Barlow\n                    </td>\n                    <td className=\"whitespace-nowrap px-4 py-2 text-gray-700\">24/05/1995</td>\n                    <td className=\"whitespace-nowrap px-4 py-2 text-gray-700\">Singer</td>\n                    <td className=\"whitespace-nowrap px-4 py-2 text-gray-700\">$20,000</td>\n                    <td className=\"whitespace-nowrap px-4 py-2\">\n                    <a\n                        href=\"#\"\n                        className=\"inline-block rounded bg-indigo-600 px-4 py-2 text-xs font-medium text-white hover:bg-indigo-700\"\n                    >\n                        View\n                    </a>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</>\n  );\n}","/Users/johnkim/Developer/crk-django/crk-venv/crk/frontend/src/components/CookieTableRow.js",[],[],{"ruleId":"111","severity":1,"message":"112","line":2,"column":8,"nodeType":"113","messageId":"114","endLine":2,"endColumn":14},{"ruleId":"111","severity":1,"message":"115","line":18,"column":22,"nodeType":"113","messageId":"114","endLine":18,"endColumn":32},{"ruleId":"116","severity":1,"message":"117","line":46,"column":35,"nodeType":"118","messageId":"119","endLine":46,"endColumn":37},{"ruleId":"111","severity":1,"message":"120","line":1,"column":10,"nodeType":"113","messageId":"114","endLine":1,"endColumn":18},{"ruleId":"111","severity":1,"message":"121","line":1,"column":20,"nodeType":"113","messageId":"114","endLine":1,"endColumn":29},{"ruleId":"111","severity":1,"message":"122","line":1,"column":31,"nodeType":"113","messageId":"114","endLine":1,"endColumn":37},{"ruleId":"111","severity":1,"message":"123","line":2,"column":8,"nodeType":"113","messageId":"114","endLine":2,"endColumn":19},{"ruleId":"111","severity":1,"message":"124","line":42,"column":14,"nodeType":"113","messageId":"114","endLine":42,"endColumn":26},{"ruleId":"111","severity":1,"message":"125","line":74,"column":14,"nodeType":"113","messageId":"114","endLine":74,"endColumn":26},{"ruleId":"111","severity":1,"message":"126","line":84,"column":14,"nodeType":"113","messageId":"114","endLine":84,"endColumn":26},{"ruleId":"127","severity":1,"message":"128","line":67,"column":21,"nodeType":"129","endLine":70,"endColumn":22},{"ruleId":"127","severity":1,"message":"128","line":84,"column":21,"nodeType":"129","endLine":87,"endColumn":22},"no-unused-vars","'Banner' is defined but never used.","Identifier","unusedVar","'setCookies' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'CookieTable' is defined but never used.","'createCookie' is defined but never used.","'DeleteCookie' is defined but never used.","'handleChange' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]